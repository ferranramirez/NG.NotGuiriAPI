trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "ls"
      ls
      Write-Host "cd"
      cd $(System.DefaultWorkingDirectory)
      Write-Host "ls"
      ls
- task: replacetokens@3
  displayName: 'Replace tokens'
  inputs:
    rootDirectory: '$(System.DefaultWorkingDirectory)'
    targetFiles: '**/appsettings.*.json'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish docker-deploy.yml'
  inputs:
    PathtoPublish: 'docker-deploy.yml'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: Docker@2
  displayName: 'Docker Build'
  inputs:
    containerRegistry: 'GitLabRegistry/ferranramirez'
    repository: 'notguiri/notguiriapi'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: '$(Build.SourceBranchName)'
    arguments: '--build-arg PAT=$(PAT)'
    addPipelineData: false
- task: Docker@2
  displayName: 'Docker Push'
  inputs:
    containerRegistry: 'GitLabRegistry/ferranramirez'
    repository: 'notguiri/notguiriapi'
    command: 'push'
    tags: '$(Build.SourceBranchName)'
    addPipelineData: false
- task: CmdLine@2
  displayName: 'Push image'
  inputs:
    script: 'docker push cloud.canister.io:5000/ferranramirez/ngnotguiriapi:$(Build.SourceBranchName)'