trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: replacetokens@3
  inputs:
    rootDirectory: '$(System.DefaultWorkingDirectory)'
    targetFiles: '**/appsettings.$(ASPNETCORE_ENVIRONMENT).json'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: false

- task: PublishBuildArtifacts@1
  inputs:
    # PathtoPublish: 'docker-deploy.yml'
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: DockerCompose@0
  displayName: 'Docker Build'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'canister_registry'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: |
      PAT=$(PAT)
      ASPNETCORE_ENVIRONMENT=$(ASPNETCORE_ENVIRONMENT)
    action: 'Build services'
    includeLatestTag: false
- task: CmdLine@2
  displayName: 'Tag image with Canister repository name'
  inputs:
    script: 'docker tag cloud.canister.io:5000/ngnotguiriapi_notguiriapi:latest cloud.canister.io:5000/ferranramirez/ngnotguiriapi:latest'
- task: CmdLine@2
  displayName: 'Login into the Canister registry'
  inputs:
    script: 'docker login --username=ferranramirez --password=$(REGISTER_PWD) cloud.canister.io:5000'
- task: CmdLine@2
  displayName: 'Push image'
  inputs:
    script: 'docker push cloud.canister.io:5000/ferranramirez/ngnotguiriapi:latest'