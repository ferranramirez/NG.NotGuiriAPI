trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

steps: 
- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.StagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.StagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DockerCompose@0
  displayName: 'Docker Build'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'docker-hub/ferranramirez'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: |
      PAT=$(PAT)
      ASPNETCORE_ENVIRONMENT=$(ASPNETCORE_ENVIRONMENT)
    action: 'Build services'
    includeLatestTag: true

- task: CmdLine@2
  displayName: 'Tag image with Canister repository name'
  inputs:
    script: 'docker tag ngnotguiriapi_notguiriapi:latest cloud.canister.io:5000/ferranramirez/ngnotguiriapi:latest'

- task: DockerCompose@0
  displayName: 'Push image to Canister registry'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'canister_registry'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: 'PAT=$(PAT) ASPNETCORE_ENVIRONMENT=$(ASPNETCORE_ENVIRONMENT)'
    projectName: 'ferranramirez/ngnotguiriapi'
    action: 'Push services'
    includeLatestTag: true
    
- task: Docker@2
  displayName: 'Push image to Canister registry 2'
  inputs:
    containerRegistry: 'cloud.canister.io:5000/ferranramirez/'
    repository: 'ferranramirez/ngnotguiriapi'
    command: 'push'
    tags: 'latest'
    addPipelineData: false